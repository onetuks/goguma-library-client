name: Deploy Production

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Environment Variables
        run: |
          echo "VUE_APP_KAKAO_CLIENT_ID=${{ secrets.VUE_APP_KAKAO_CLIENT_ID }}" >> .env
          echo "VUE_APP_KAKAO_CLIENT_SECRET=${{ secrets.VUE_APP_KAKAO_CLIENT_SECRET }}" >> .env
          echo "VUE_APP_GOOGLE_CLIENT_ID=${{ secrets.VUE_APP_GOOGLE_CLIENT_ID }}" >> .env
          echo "VUE_APP_GOOGLE_CLIENT_SECRET=${{ secrets.VUE_APP_GOOGLE_CLIENT_SECRET }}" >> .env
          echo "VUE_APP_NAVER_CLIENT_ID=${{ secrets.VUE_APP_NAVER_CLIENT_ID }}" >> .env
          echo "VUE_APP_NAVER_CLIENT_SECRET=${{ secrets.VUE_APP_NAVER_CLIENT_SECRET }}" >> .env

      - name: Install dependencies
        run: |
          npm install
          npm ci

      - name: Build
        run: npm run build

      - name: Install AWS CLI
        run: sudo apt-get install -y awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload docker-compose.yaml to S3
        run: |
          aws s3 sync ./dist s3://${{ secrets.CF_S3_BUCKET }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
